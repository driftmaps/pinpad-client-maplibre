diff --git a/App.js b/App.js
index 90fb046..58dbb65 100644
--- a/App.js
+++ b/App.js
@@ -1,5 +1,5 @@
 import React, { useEffect } from 'react';
-import { StyleSheet, View, ActivityIndicator, Text } from 'react-native';
+import { StyleSheet, View, ActivityIndicator, Text, Linking } from 'react-native';
 import MapLibreGL from '@maplibre/maplibre-react-native';
 import { useDriftFile } from './hooks/useDriftFile';
 import { useTileManager } from './hooks/useTileManager';
@@ -10,7 +10,26 @@ export default function App() {
 
   const { tileManager, isLoading, error } = useTileManager();
 
-  // useDriftFile(tileManager);
+  // Register for native file open events.
+  useDriftFile(tileManager);
+
+  // Check the initial URL for file intent.
+  useEffect(() => {
+    Linking.getInitialURL().then((url) => {
+      if (url && url.toLowerCase().endsWith('.drift')) {
+        console.log('Initial URL drift file detected:', url);
+        let localPath = url;
+        if (url.startsWith('content://')) {
+          console.log("DETECTED FILE");
+          localPath = url;
+          // localPath = url.replace('content://', '');
+        }
+        tileManager.processDriftFile(localPath);
+      }
+    }).catch(err => {
+      console.log('Error getting initial URL', err);
+    });
+  }, [tileManager]);
 
   useEffect(() => {
     if (global.HermesInternal) {
@@ -42,7 +61,8 @@ export default function App() {
       >
         <MapLibreGL.Camera
           zoomLevel={9}
-          centerCoordinate={[-73.72826520392081, 45.584043985983]}
+          centerCoordinate={[-84.3837773, 33.7521521]}
+          // centerCoordinate={[-73.72826520392081, 45.584043985983]}
           minZoomLevel={5}
           maxZoomLevel={10}
         />
diff --git a/android/app/src/main/java/com/anonymous/pinpadclientmaplibre/DriftFileUtil.kt b/android/app/src/main/java/com/anonymous/pinpadclientmaplibre/DriftFileUtil.kt
index 0a11f10..8916a71 100644
--- a/android/app/src/main/java/com/anonymous/pinpadclientmaplibre/DriftFileUtil.kt
+++ b/android/app/src/main/java/com/anonymous/pinpadclientmaplibre/DriftFileUtil.kt
@@ -1,12 +1,12 @@
 package com.anonymous.pinpadclientmaplibre
-
+import android.util.Log
 import com.facebook.react.bridge.ReactContext
 import com.facebook.react.modules.core.DeviceEventManagerModule
 
 
 object DriftFileUtil {
     fun sendDriftFileEvent(fileUri: String) {
-        // Explicitly annotate the type of the parameter in the lambda.
+        Log.d("DriftFileUtil", "Sending DriftFileOpened event with fileUri: $fileUri")
         MainApplication.reactContext?.let { reactContext: ReactContext ->
             reactContext.getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter::class.java)
                 .emit("DriftFileOpened", fileUri)
diff --git a/android/app/src/main/java/com/anonymous/pinpadclientmaplibre/MainApplication.kt b/android/app/src/main/java/com/anonymous/pinpadclientmaplibre/MainApplication.kt
index 164c9c0..89ce647 100644
--- a/android/app/src/main/java/com/anonymous/pinpadclientmaplibre/MainApplication.kt
+++ b/android/app/src/main/java/com/anonymous/pinpadclientmaplibre/MainApplication.kt
@@ -16,6 +16,7 @@ import com.facebook.soloader.SoLoader
 import expo.modules.ApplicationLifecycleDispatcher
 import expo.modules.ReactNativeHostWrapper
 import com.facebook.react.bridge.ReactContext
+import com.facebook.react.ReactInstanceEventListener
 
 class MainApplication : Application(), ReactApplication {
 
@@ -52,6 +53,14 @@ class MainApplication : Application(), ReactApplication {
       // If you opted-in for the New Architecture, we load the native entry point for this app.
       load()
     }
+
+    // Listen for the ReactContext to be created.
+    reactNativeHost.reactInstanceManager.addReactInstanceEventListener(object : ReactInstanceEventListener {
+        override fun onReactContextInitialized(reactContext: ReactContext) {
+            MainApplication.reactContext = reactContext
+        }
+    })
+
     ApplicationLifecycleDispatcher.onApplicationCreate(this)
   }
 
diff --git a/hooks/useDriftFile.ts b/hooks/useDriftFile.ts
index c9cda38..9bba52e 100644
--- a/hooks/useDriftFile.ts
+++ b/hooks/useDriftFile.ts
@@ -1,6 +1,8 @@
 import {TileManager} from '@/services/TileManager';
 import {useEffect} from 'react';
-import {DeviceEventEmitter, NativeModules} from 'react-native';
+import {DeviceEventEmitter, NativeEventEmitter, NativeModules} from 'react-native';
+
+const emitter = new NativeEventEmitter();
 
 // eslint-disable-next-line react-hooks/exhaustive-deps
 export function useDriftFile(tileManager: TileManager) {
@@ -17,6 +19,10 @@ export function useDriftFile(tileManager: TileManager) {
       await tileManager.processDriftFile(localPath);
     });
 
+    emitter.addListener('DriftFileOpened', (fileUri) => {
+      console.log("EVENT TRIGGERED via NativeEventEmitter", fileUri);
+    });
+
     return () => {
       subscription.remove();
     };
