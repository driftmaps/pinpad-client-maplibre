name: Android Build & Render Test

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 35
    
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        api-level: [28]
        target: [google_apis]
        arch: [x86_64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install

      - name: Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Install Android SDK components
        run: |
          sdkmanager --install "build-tools;33.0.0" \
            "platforms;android-33" \
            "system-images;android-${{ matrix.api-level }};${{ matrix.target }};${{ matrix.arch }}" \
            "platform-tools" \
            "ndk;25.1.8937393"
          sdkmanager --licenses

      - name: Generate test data
        run: yarn generate-test-data

      - name: Build Android app
        run: |
          yarn expo prebuild --platform android --clean
          cd android && ./gradlew assembleDebug && cd ..

      - name: Run E2E Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          cores: 2
          ram-size: 4096M
          heap-size: 2048M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            # Install the app
            adb install -r android/app/build/outputs/apk/debug/app-debug.apk
            
            # Start Expo server
            yarn expo start &
            EXPO_PID=$!
            
            # Wait for Expo server
            for i in {1..30}; do
              if curl -s http://localhost:8081/status | grep -q "packager-status:running"; then
                echo "âœ… Expo server is ready"
                break
              fi
              echo "Waiting for Expo server... (attempt $i)"
              sleep 2
            done
            
            # Run Maestro tests
            maestro test ./tests/*.yaml
            TEST_RESULT=$?
            
            # Cleanup
            kill $EXPO_PID 2>/dev/null || true
            
            exit $TEST_RESULT

      - name: Upload Maestro artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-artifacts
          path: |
            ~/.maestro/tests/
            /home/runner/.maestro/tests/
            /home/runner/.maestro/logs/
